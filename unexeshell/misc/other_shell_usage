 Usage:
 ==================calltree use command 1 ==========================================
 find . -name '*.c' -o -name '*.h' -o -name '*.java' -o -name '*.cpp' -o -name '*.cc' |  xargs calltree -gb -np -m [-dot] > tmp.dot
 calltree -b -dot -gb -np -m *.c > tmp.dot
 ===================================================================================
 ==================calltree use command 2 ==========================================
 calltree -gb -np [-dot] lf=start_kernel KERNEL_DIR/init/*.c  > tmp.dot
 ===================================================================================
 =================calltree use command 3 out to dot tool ===========================
 add -dot parameter in command then do like this:-dot  then  dot -T png tmp.dot -o haolongteset.png
 ===================================================================================
 ==========================clean build android core ================================
 cd frameworks/base; git reset --hard ; croot; repo sync -j4; repo sync -j4; repo sync -j4; repo sync -j4; repo sync -j4; repo sync -j4; repo sync -j4; repo sync -j4; repo sync -j4; repo sync -j4; make update-api -j6 ;  make -j6
 ===================================================================================
 [PDF]: 9621073404
 7zip: 7za a -t7z -mx=5 test.7z test-dir ; 7za X test.7z
 ===================================================================================
 rename files:
 find | xargs rename 's/aaaaa/bbbbbbb/'
 ===================================================================================
 replace files:
 sed -i 's/aaa/bbbb/g' `grep -r aaa -rl .`
 sed -i 's/AAA/BBBB/g' `grep -r AAA -rl .`
 sed -i 's/\bword\b/to_word/g' `grep -rlw word  .
 ===================================================================================
 vim save readonly file: w !sudo tee %
 ===================================================================================
 Batch Clear blank:
 sed -i 's/\s\+$//g' `grep -r "\s\+$" -rl .`
 ===================================================================================
 format code style
 find . -name *.c -o -name *.cpp -o -name *.h  | xargs indent [x]
 [x] maybe: indent -npro -gnu -i4 -ts4 -sob -l200 -ss -bl -bli 0 -npsl
 ===================================================================================
 统计所有文件的数量
 ls -lR | grep "^-"|wc -l

 统计所有文件和文件夹的数量
 ls -lR |wc -l

 统计当前文件的数量
 ls -l | grep "^-"|wc -l

 统计当前文件和文件夹的数量
 ls -l |wc -l
 ===================================================================================
 size teminal size 
 min: ctrl -   max: ctrl + shift + +
 ===================================================================================
 command-t split window : ctrl + v
 ===================================================================================
 vim man :  shift + k
 ===================================================================================
 update linux time :sudo ntpdate cn.pool.ntp.org
 ===================================================================================
 gen kernel tags with dts/i Makefil/Kconfig : cp ~/shell_my/unexeshell/old_patch/tags.sh scripts/tags.sh
 ===================================================================================
use  fallocate to quick create a file
 ===================================================================================
 ********************FOR doxygen gen API and call png*******************************
 1: install soft : sudo apt-get install doxygen doxygen-doc doxygen-gui graphviz
 2: mkdir "your_proj_ays_dir"
 3: cp ~/shell_my/unexeshell/Doxyfile "your_proj_ays_dir/"
 4: vim your_proj_ays_dir/Doxyfile modify INPUT to source_dir eg : ../fs/
 5: doxygen Doxyfile
 ===================================================================================
 update android ramdisk from out dir:
 rm -rf out/target/product/xxxx/ramdisk.img  ; make ramdisk-nodeps ; rm out/target/product/xxxx/boot.img ;make bootimage-nodeps
 ===================================================================================
 qemu bootloader print : -serial stdio
 show support maching:  qemu-system-arm -machine help
 show support cpu :  qemu-system-arm -machine versatileab -cpu help
 ===================================================================================
 python start env:
 import readline, rlcompleter; readline.parse_and_bind("tab: complete")
 ===================================================================================
 ===================================================================================
 split tar file :
 tar -zcvf -  xxxxxx/  | split -d -b 4000M - xxxxxx.tar.gz
 ===================================================================================
 png to jpg :
 convert xx.png xx.jpg
 ===================================================================================
 ===================================================================================
 gen YCM config
 python ~/.vim/bundle/YCM-Generator/config_gen.py . --compiler=/usr/bin/clang-3.8
 ===================================================================================
 import ros env
 source /opt/ros/kinetic/setup.bash
 ===================================================================================
 gdb import .gdbinit command:
 gdb -iex 'add-auto-load-safe-path .'
 ===================================================================================
 python tab:
 import readline, rlcompleter; readline.parse_and_bind("tab: complete")
 ===================================================================================
 quick build android native outof AOSP code
 echo "project("Hello_test" C CXX) " > CMakeLists.txt
 echo "add_executable(Hello_test ./main.cpp)" >> CMakeLists.txt
 cmake  -DCMAKE_TOOLCHAIN_FILE="${ANDROID_NDK}/build/cmake/android.toolchain.cmake"  -DANDROID_ABI="armeabi-v7a with NEON" -DCMAKE_BUILD_TYPE="Release"  -DANDROID_NATIVE_API_LEVEL="21" -DANDROID_NDK="${ANDROID_NDK}" -DANDROID_USE_OPENMP=ON
 make

 or use do './build/tools/make_standalone_toolchain.py' from NDK to create standalone_toolchain.py
 then
 aarch64-linux-android-gcc 
 ===================================================================================
 quick share android screenrecord
 adb shell screenrecord --output-format=h264 - | ffplay -autorotate -
 ===================================================================================
 git 中文路径乱码: git config --global core.quotepath false
 ===================================================================================
 elf modify tool: patchelf
 ===================================================================================
 complier explorer
 https://godbolt.org/
 ===================================================================================
 disable qcom EDL devices config by ModemManager
 sudo systemctl stop ModemManager
 ===================================================================================
 disable dynamic lib loop check api define by -fuse-ld=gold
 eg:aarch64-linux-android29-clang++   -static-libstdc++ -pie -fPIE -IOpenCL -LOpenCL/aarch64_lib -lOpenCL -fuse-ld=gold src/OpenCLInfo.cpp -o out/OpenCLInfo_aarch64
 eg:aarch64-linux-android29-clang++   -static-libstdc++ -pie -fPIE -IOpenCL -LOpenCL/aarch64_lib -lGLES_mali -fuse-ld=gold src/OpenCLInfo.cpp -o out/OpenCLInfo_aarch64
 ===================================================================================
 gen ycm database: compile_commands.json
 way a: cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON [other config]
 way b: bear make -jxx
 aosp create compile_commands.json
 export SOONG_GEN_COMPDB=1
 export SOONG_GEN_COMPDB_DEBUG=1
 export SOONG_LINK_COMPDB_TO=$ANDROID_HOST_OUT
 make -j32
 ===================================================================================
 use rsync -v -r -e ssh  to speed copy repeated file
 ===================================================================================
 make param eg: make CFLAGS='-Wno-error=unused-value -Wno-error=logical-not-parentheses'
 ===================================================================================
 cutstomer install dir:
 ./configure --prefix=xxxxx ...
 cmake -DCMAKE_INSTALL_PREFIX=xxx ...
 ===================================================================================
 git submodule update --init --recursive
 git submodule  foreach --recursive "cmd"
 sometimes: submodule in submodue
 git submodule  foreach --recursive "git submodule update --init --recursive"
 ===================================================================================
 start vim and temporarily ignore your .vimrc
 vim -u NONE
 ===================================================================================
 more fast merge git commit than squash:
 git reset --soft HEAD~number
 git commit
 or:
 git rebase -i HEAD~number
 git commit ... pick squash squash ...
 ===================================================================================
 code compat for windows env:
 Visual Studio + llvm + clang-cl + Ninja
 at bash env, need push vcvarsall.bat to env then call it export windows link env
 cmd.exe /c " vcvarsall.bat x64 && cmake -G "Ninja" \
 -DCMAKE_C_COMPILER=clang-cl.exe \
 -DCMAKE_CXX_COMPILER=clang-cl.exe \
 -DCMAKE_MAKE_PROGRAM=ninja.exe ..."
 ===================================================================================
 git clean exclude dir:
 git clean -xdf --exclude=.cache --exclude=.ycm
 ===================================================================================
 du show hidden file:
 du -sh * .[^.]*
 du -sh .[!.]* * 2>/dev/null | sort -rh
 ===================================================================================
