################################################################################################################
#always merge from here
export PATH=$PATH:~/shell_my
export PATH=$PATH:~/safe_un
export PATH=~/un_sudo_install_path/bin$PATH
#export LD_LIBRARY_PATH=~/un_sudo_link_path:$LD_LIBRARY_PATH
#for ARM_Compiler_5
#export PATH=$PATH:/media/zhl/second/old_home_dir/ARM_Compiler_5/bin
#export ARMBIN=/media/zhl/second/old_home_dir/ARM_Compiler_5/bin64
#export ARMLIB=/media/zhl/second/old_home_dir/ARM_Compiler_5/lib
#export ARMINC=/media/zhl/second/old_home_dir/include
#add for qcom modem build tool env
export HEXAGON_ROOT=~/Qualcomm/HEXAGON_Tools
export HEXAGON_RTOS_RELEASE=6.4.01
export ARMTOOLS=QDSP6GCC
#add for other shell command compelte
complete -W "withqcn withoutqcn" qcom_flash.py
complete -W "withqcn withoutqcn" qcom_flash_32.py
alias gitlog='git log --pretty=format:'\''%h : %an : %ad : %s'\'' --topo-order --graph --date=short'
alias ggl='git log'
alias ggb='git branch'
alias ggp='git pull'
alias ggt='git tag'
alias ggd='git diff'
alias ggs='git status'
alias v=vim
alias V=vim
alias gvim='LANG=EN gvim'
alias mysource=source
alias cdf='cd $(find . -type d| pick)'
alias tmux_attach='tmux attach -d'
#source ~/.git-completion.bash
#add for t32
export T32SYS=/opt/t32
export T32TMP=/tmp
export T32ID=T32
export ADOBE_PATH=/usr/bin/evince
export PATH=$PATH:/opt/t32/bin/pc_linux64
export T32PDFVIEWER=/opt/t32/bin/pc_linux64/t32_startpdfviewer.sh
#export NDK_ROOT wiil cause AOSP build failed. so disable it
#export NDK_ROOT=/media/zhl/second/code/android-ndk-r14b
#enable and config ccache
#use command config: ./prebuilts/misc/linux-x86/ccache/ccache -M 50G
#also command config: ccache -M 50G
#use command to check status: ccache -s
#export USE_CCACHE=1
#export CCACHE_DIR=/media/zhl/second/.cache
function cdl {
	builtin cd "$@" && ls --color && find . -maxdepth 1 -type d
}

function cdn {
if [ $# -gt 1 ]
then
	echo "need only one parm"
fi

if [[ $1 =~ ^[0-9]+$ ]]
then
	back_to="./"
for loop_i in $(seq 1 $1)
do
	echo $loop_i
	back_to=${back_to}"../"
done
	echo ${back_to}
	builtin cd ${back_to} && ls --color
else
	echo "PWD: $PWD"
	if [ $# -eq 0 ]
	then
		echo "Usage:"
		echo "      cdn [num]: back to num"
		echo "      cdn ["dir"] : back to "dir""
		echo "      eg: when you at dir:"
		echo "      /home/zhl/code/linux_kernel_learn/drivers/cpufreq"
		echo "      you can use below command to 'code' dir qucikly"
		echo "      :cdn code or . cdn 3"
	else
		echo "TODIR: $1"
		Index=`awk 'BEGIN{print match("'$PWD'","'$1'")}'`
		echo "Index: $Index"
		if [[ $Index = 0 ]]
		then
			echo "ERR: can not find $1 from $PWD"
		fi
		tmp=$PWD
		new_dir="${tmp:0:$Index-1}""$1"
		echo "Now go to dir: $new_dir"
		cd $new_dir
	fi
fi

}
alias codedir='cd $(find ~/code/  ~/zhl_second/code/ -maxdepth 1 -type d| pick)'
alias dirsquick='cd $(dirs -l -v| pick | cut -c 3-)'
function h {
	`history | pick | cut -c 8-`
}
function desk {
	builtin cd ~/Desktop
}

function desk_tmp_file {
	desk
	builtin cd tmp_file
}
